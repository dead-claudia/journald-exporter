on:
  workflow_call:
    outputs:
      run_id:
        value: ${{ github.run_id }}

name: Test

env:
  RUSTFLAGS: "-Dwarnings"
  RUST_BACKTRACE: full

# Only allow Git repo access to start.
permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install libsystemd-dev
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
      - name: Shellcheck
        run: shellcheck ./scripts/*.sh
      - name: Check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ github.token }}
          args: --all-targets
      - name: Rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --check

  build:
    name: Build
    needs:
      - lint
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    steps:
      - name: Show GLIBC version
        run: ldd --version
      - run: yum makecache
      - run: yum -y install systemd-devel epel-release
      - run: yum -y install jq
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Build debug test binary
        id: test-debug
        run: cargo test --no-run --message-format=json | jq -r '"binary=\(select(.profile.test).filenames[])"' > $GITHUB_OUTPUT
      - name: Build release test binary
        id: test-release
        run: cargo test --release --no-run --message-format=json | jq -r '"binary=\(select(.profile.test).filenames[])"' > $GITHUB_OUTPUT
      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: journald-exporter
          path: target/release/journald-exporter
          if-no-files-found: error
      - name: Upload debug unit test artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-debug
          path: ${{ steps.test-debug.outputs.binary }}
          if-no-files-found: error
          # Much shorter retention period as it's mostly used for testing and could get large.
          retention-days: 7
      - name: Upload release unit test artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-release
          path: ${{ steps.test-release.outputs.binary }}
          if-no-files-found: error
          # Much shorter retention period as it's mostly used for testing and could get large.
          retention-days: 7

  unit_tests:
    name: Unit tests
    needs:
      - build
    strategy:
      matrix:
        os:
        - ubuntu-18.04
        - ubuntu-20.04
        - ubuntu-22.04
        binary:
        - test-debug
        - test-release
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download test binary artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.binary }}
      - name: Configure test binary permissions
        run: chmod +x $BINARY
        env:
          BINARY: ${{ steps.download.outputs.download-path }}/${{ matrix.binary }}
      - name: Test
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 2
          command: $BINARY --show-output
          # Usually passes the second try if it flakes the first.
          max_attempts: 3
        env:
          BINARY: ${{ steps.download.outputs.download-path }}/${{ matrix.binary }}

  miri_tests:
    name: Miri tests
    needs:
      - unit_tests
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install libsystemd-dev
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: miri
          override: true
      - name: Setup Miri
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: miri
          args: setup
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: miri
          args: --all-targets -- --show-output

  e2e_tests:
    name: End-to-end tests (release)
    needs:
      - unit_tests
    strategy:
      matrix:
        os:
        - ubuntu-18.04
        - ubuntu-20.04
        - ubuntu-22.04
    runs-on: ${{ matrix.os }}
    steps:
      - name: Download release artifact
        id: download
        uses: actions/download-artifact@v3
        with:
          name: journald-exporter
      - name: Configure release binary permissions
        run: chmod +x $BINARY
        env:
          BINARY: ${{ steps.download.outputs.download-path }}/journald-exporter
      - name: Test
        run: sudo node ./scripts/e2e.js -b $BINARY
        env:
          BINARY: ${{ steps.download.outputs.download-path }}/journald-exporter
