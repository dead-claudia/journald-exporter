// WARNING: This file is auto-generated by `scripts/gen-args-tests.js`. Do not modify directly.

use crate::cli::args::*;

fn parse_args(args: &[&str]) -> Result<Args, ArgsError> {
    crate::cli::args::parse_args(args.iter().map(std::ffi::OsString::from))
}

#[test]
fn short_start_returns_missing_private_key() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "123", "-k", "some/dir", "-K"]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn long_start_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn short_arg_without_port_returns_empty_private_key() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "123", "-k", "some/dir", "-K", ""]),
        Err(ArgsError::EmptyPrivateKey),
    );
}

#[test]
fn short_eq_arg_without_port_returns_empty_private_key() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "123", "-k", "some/dir", "-K="]),
        Err(ArgsError::EmptyPrivateKey),
    );
}

#[test]
fn long_arg_without_port_returns_empty_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key",
            ""
        ]),
        Err(ArgsError::EmptyPrivateKey),
    );
}

#[test]
fn long_eq_arg_without_port_returns_empty_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key="
        ]),
        Err(ArgsError::EmptyPrivateKey),
    );
}

#[test]
fn short_arg_ending_in_colon_without_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-K",
            "blah:"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn short_eq_arg_ending_in_colon_without_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-K=blah:"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn long_arg_ending_in_colon_without_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key",
            "blah:"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn long_eq_arg_ending_in_colon_without_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key=blah:"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn short_arg_with_special_chars_and_no_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-K",
            "b/l@a!h:"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn short_eq_arg_with_special_chars_and_no_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-K=b/l@a!h:"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn long_arg_with_special_chars_and_no_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key",
            "b/l@a!h:"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn long_eq_arg_with_special_chars_and_no_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key=b/l@a!h:"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn short_normal_private_key_path_without_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-K",
            "some/key.pem"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn short_eq_normal_private_key_path_without_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-K=some/key.pem"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn long_normal_private_key_path_without_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key",
            "some/key.pem"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn long_eq_normal_private_key_path_without_certificate_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--private-key=some/key.pem"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}
