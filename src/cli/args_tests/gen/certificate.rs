// WARNING: This file is auto-generated by `scripts/gen-args-tests.js`. Do not modify directly.

use crate::cli::args::*;

fn parse_args(args: &[&str]) -> Result<Args, ArgsError> {
    crate::cli::args::parse_args(args.iter().map(std::ffi::OsString::from))
}

#[test]
fn short_start_returns_missing_certificate() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "123", "-k", "some/dir", "-C"]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn long_start_returns_missing_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate"
        ]),
        Err(ArgsError::MissingCertificate),
    );
}

#[test]
fn short_arg_with_empty_value_returns_empty_certificate() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "123", "-k", "some/dir", "-C", ""]),
        Err(ArgsError::EmptyCertificate),
    );
}

#[test]
fn short_eq_arg_with_empty_value_returns_empty_certificate() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "123", "-k", "some/dir", "-C="]),
        Err(ArgsError::EmptyCertificate),
    );
}

#[test]
fn long_arg_with_empty_value_returns_empty_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate",
            ""
        ]),
        Err(ArgsError::EmptyCertificate),
    );
}

#[test]
fn long_eq_arg_with_empty_value_returns_empty_certificate() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate="
        ]),
        Err(ArgsError::EmptyCertificate),
    );
}

#[test]
fn short_arg_ending_in_colon_without_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-C",
            "blah:"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn short_eq_arg_ending_in_colon_without_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-C=blah:"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn long_arg_ending_in_colon_without_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate",
            "blah:"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn long_eq_arg_ending_in_colon_without_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate=blah:"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn short_arg_with_special_chars_and_no_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-C",
            "b/l@a!h:"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn short_eq_arg_with_special_chars_and_no_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-C=b/l@a!h:"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn long_arg_with_special_chars_and_no_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate",
            "b/l@a!h:"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn long_eq_arg_with_special_chars_and_no_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate=b/l@a!h:"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn short_normal_certificate_path_without_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-C",
            "some/cert.pem"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn short_eq_normal_certificate_path_without_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "-C=some/cert.pem"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn long_normal_certificate_path_without_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate",
            "some/cert.pem"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}

#[test]
fn long_eq_normal_certificate_path_without_private_key_returns_missing_private_key() {
    assert_eq!(
        parse_args(&[
            "journald-exporter",
            "-p",
            "123",
            "-k",
            "some/dir",
            "--certificate=some/cert.pem"
        ]),
        Err(ArgsError::MissingPrivateKey),
    );
}
