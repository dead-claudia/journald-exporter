// WARNING: This file is auto-generated by `scripts/gen-args-tests.js`. Do not modify directly.

use crate::cli::args::*;

fn parse_args(args: &[&str]) -> Result<Args, ArgsError> {
    crate::cli::args::parse_args(args.iter().map(std::ffi::OsString::from))
}

#[test]
fn short_start_returns_missing_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k"]),
        Err(ArgsError::MissingKeyDir),
    );
}

#[test]
fn long_start_returns_missing_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir"]),
        Err(ArgsError::MissingKeyDir),
    );
}

#[test]
fn short_arg_without_port_returns_empty_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k", ""]),
        Err(ArgsError::EmptyKeyDir),
    );
}

#[test]
fn short_eq_arg_without_port_returns_empty_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k="]),
        Err(ArgsError::EmptyKeyDir),
    );
}

#[test]
fn long_arg_without_port_returns_empty_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir", ""]),
        Err(ArgsError::EmptyKeyDir),
    );
}

#[test]
fn long_eq_arg_without_port_returns_empty_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir="]),
        Err(ArgsError::EmptyKeyDir),
    );
}

#[test]
fn short_arg_ending_in_colon_without_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k", "blah:"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn short_eq_arg_ending_in_colon_without_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k=blah:"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn long_arg_ending_in_colon_without_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir", "blah:"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn long_eq_arg_ending_in_colon_without_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir=blah:"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn short_arg_with_special_chars_and_no_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k", "b/l@a!h:"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn short_eq_arg_with_special_chars_and_no_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k=b/l@a!h:"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn long_arg_with_special_chars_and_no_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir", "b/l@a!h:"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn long_eq_arg_with_special_chars_and_no_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir=b/l@a!h:"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn short_normal_key_dir_path_without_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k", "some/dir"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn short_eq_normal_key_dir_path_without_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-k=some/dir"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn long_normal_key_dir_path_without_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir", "some/dir"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn long_eq_normal_key_dir_path_without_port_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--key-dir=some/dir"]),
        Err(ArgsError::MissingPort),
    );
}
