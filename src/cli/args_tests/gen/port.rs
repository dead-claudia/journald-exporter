// WARNING: This file is auto-generated by `scripts/gen-args-tests.js`. Do not modify directly.

use crate::cli::args::*;

fn parse_args(args: &[&str]) -> Result<Args, ArgsError> {
    crate::cli::args::parse_args(args.iter().map(std::ffi::OsString::from))
}

#[test]
fn short_start_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn long_start_returns_missing_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port"]),
        Err(ArgsError::MissingPort),
    );
}

#[test]
fn short_empty_port_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", ""]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_eq_empty_port_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p="]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_empty_port_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", ""]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_eq_empty_port_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port="]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_non_numeric_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "abc"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_eq_non_numeric_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p=abc"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_non_numeric_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", "abc"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_eq_non_numeric_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port=abc"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_partially_numeric_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "abc123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_eq_partially_numeric_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p=abc123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_partially_numeric_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", "abc123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_eq_partially_numeric_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port=abc123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_hex_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "0x123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_eq_hex_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p=0x123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_hex_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", "0x123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_eq_hex_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port=0x123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_negative_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "-123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_eq_negative_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p=-123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_negative_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", "-123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_eq_negative_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port=-123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_negative_zero_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "-0"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_eq_negative_zero_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p=-0"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_negative_zero_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", "-0"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_eq_negative_zero_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port=-0"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_plus_zero_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "+0"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_eq_plus_zero_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p=+0"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_plus_zero_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", "+0"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_eq_plus_zero_port_number_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port=+0"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_plus_port_number_for_parent_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "+123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_eq_plus_port_number_for_parent_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p=+123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_plus_port_number_for_parent_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", "+123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn long_eq_plus_port_number_for_parent_returns_invalid_port() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port=+123"]),
        Err(ArgsError::InvalidPort),
    );
}

#[test]
fn short_unsigned_port_number_for_parent_returns_missing_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p", "123"]),
        Err(ArgsError::MissingKeyDir),
    );
}

#[test]
fn short_eq_unsigned_port_number_for_parent_returns_missing_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "-p=123"]),
        Err(ArgsError::MissingKeyDir),
    );
}

#[test]
fn long_unsigned_port_number_for_parent_returns_missing_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port", "123"]),
        Err(ArgsError::MissingKeyDir),
    );
}

#[test]
fn long_eq_unsigned_port_number_for_parent_returns_missing_key_dir() {
    assert_eq!(
        parse_args(&["journald-exporter", "--port=123"]),
        Err(ArgsError::MissingKeyDir),
    );
}
